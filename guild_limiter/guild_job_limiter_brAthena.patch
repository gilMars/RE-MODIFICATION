Index: conf/battle/guild.conf
===================================================================
--- conf/battle/guild.conf	(revision 441)
+++ conf/battle/guild.conf	(working copy)
@@ -61,3 +61,8 @@
 // padr„o: no
 guild_castle_invite: no
 guild_castle_expulsion: no
+
+
+// Limite de classes repetidas no cl„
+// guild_job_limiter = 0 para desativar, quantidade m·xima È 999
+guild_job_limiter: 1
\ No newline at end of file
Index: src/map/battle.c
===================================================================
--- src/map/battle.c	(revision 441)
+++ src/map/battle.c	(working copy)
@@ -7433,6 +7433,7 @@
 	{ "max_joblv_taekwon_master",			&battle_config.max_joblv_taekwon_master,		 50,	0,		255,			},
 	{ "max_joblv_soullinker",				&battle_config.max_joblv_soullinker,		 	 50,	0,		255,			},
 	{ "max_joblv_sn_snb",					&battle_config.max_joblv_sn_snb,		 	 	 99,	0,		255,			},
+	{ "guild_job_limiter",					&battle_config.guild_job_limiter,		 	 	    0,	    0,		999,		},
 };
 #ifndef STATS_OPT_OUT
 /**
Index: src/map/battle.h
===================================================================
--- src/map/battle.h	(revision 441)
+++ src/map/battle.h	(working copy)
@@ -579,6 +579,8 @@
 	int max_joblv_taekwon_master;
 	int max_joblv_soullinker;
 	int max_joblv_sn_snb;
+	int guild_job_limiter;
+	
 };
 
 /* criteria for battle_config.idletime_critera */
Index: src/map/guild.c
===================================================================
--- src/map/guild.c	(revision 441)
+++ src/map/guild.c	(working copy)
@@ -8,14 +8,14 @@
 *                            www.brathena.org                                *
 ******************************************************************************
 * src/map/guild.c                                                            *
-* FunÔøΩÔøΩes referentes ÔøΩs guildas e castelos                                   *
+* Fun??es referentes ?s guildas e castelos                                   *
 ******************************************************************************
 * Copyright (c) brAthena Dev Team                                            *
 * Copyright (c) Hercules Dev Team                                            *
 * Copyright (c) Athena Dev Teams                                             *
 *                                                                            *
-* Licenciado sob a licenÔøΩa GNU GPL                                           *
-* Para mais informaÔøΩÔøΩes leia o arquivo LICENSE na raÔøΩz do emulador           *
+* Licenciado sob a licen?a GNU GPL                                           *
+* Para mais informa??es leia o arquivo LICENSE na ra?z do emulador           *
 *****************************************************************************/
 
 #define BRATHENA_CORE
@@ -624,6 +624,27 @@
 }
 
 /*=============================================
+ * Desenvolvedor: Gilmar B. Freitas(@Kyomai)
+ * Conta a quantidade de jogadores de uma determinada classe
+ *--------------------------------------------*/
+int guild_job_count( struct guild* g, short class ) {
+
+	int i, quantidade = 0;
+	
+	for (i = 0; i < g->max_member; ++i) {
+		
+		// Caso o jogador esteja online verifica a classe do personagem diretamente.
+		if (g->member[i].online) {
+			if (g->member[i].sd->status.class_ == class)++quantidade;
+		} else {
+			if (g->member[i].class_ == class)++quantidade;
+		}
+		
+	}
+	return quantidade;
+}
+
+/*=============================================
  * Player sd send a guild invatation to player tsd to join his guild
  *--------------------------------------------*/
 int guild_invite(struct map_session_data *sd, struct map_session_data *tsd) {
@@ -725,7 +746,26 @@
 			if( tsd ) clif->guild_inviteack(tsd,3);
 			return 0;
 		}
+		
+				
+		// Verifica se est· habilitado o recurso de limitaÁ„o de classes repetidas
+		if ( battle_config.guild_job_limiter > 0 ) {
 
+			int quantidade = guild_job_count(g,sd->status.class_);
+
+			// Se a quantidade de membros da mesma classe for igual ou maior que a quantidade limite definida no arquivo guild.conf o jogador convidadon„o ser· convidado
+			if ( quantidade >= battle_config.guild_job_limiter ) {
+				char mensagem[128];
+				sprintf( mensagem, "VocÍ n„o pode se tornar membro do cl„, porque o cl„ j· possui %d %s.", quantidade, pc->job_name(sd->status.class_) );
+				clif->messagecolor_self(sd->fd, COLOR_RED, mensagem);
+				sd->guild_invite = 0; // Apaga o convite ser membro do cl„.
+				sd->guild_invite_account = 0;
+				return 0;
+			}
+		}
+		// Fim da verificaÁ„o
+
+
 		guild->makemember(&m,sd);
 		intif->guild_addmember(guild_id, &m);
 		//TODO: send a minimap update to this player
@@ -2348,6 +2388,7 @@
 	guild->recv_noinfo = guild_recv_noinfo;
 	guild->recv_info = guild_recv_info;
 	guild->npc_request_info = guild_npc_request_info;
+	guild->job_count = guild_job_count;
 	guild->invite = guild_invite;
 	guild->reply_invite = guild_reply_invite;
 	guild->member_joined = guild_member_joined;
Index: src/map/guild.h
===================================================================
--- src/map/guild.h	(revision 441)
+++ src/map/guild.h	(working copy)
@@ -108,6 +108,7 @@
 	int (*recv_noinfo) (int guild_id);
 	int (*recv_info) (struct guild *sg);
 	int (*npc_request_info) (int guild_id,const char *ev);
+	int (*job_count) (struct guild *g, short class);
 	int (*invite) (struct map_session_data *sd,struct map_session_data *tsd);
 	int (*reply_invite) (struct map_session_data *sd,int guild_id,int flag);
 	void (*member_joined) (struct map_session_data *sd);
Index: src/map/pc.c
===================================================================
--- src/map/pc.c	(revision 441)
+++ src/map/pc.c	(working copy)
@@ -8,14 +8,14 @@
 *                            www.brathena.org                                *
 ******************************************************************************
 * src/map/pc.c                                                               *
-* Fun√ß√µes referentes aos par√¢metros do personagem e verifica√ß√µes             *
+* FunÁıes referentes aos par‚metros do personagem e verificaÁıes             *
 ******************************************************************************
 * Copyright (c) brAthena Dev Team                                            *
 * Copyright (c) Hercules Dev Team                                            *
 * Copyright (c) Athena Dev Teams                                             *
 *                                                                            *
-* Licenciado sob a licenÔøΩa GNU GPL                                           *
-* Para mais informa√ß√µes leia o arquivo LICENSE na ra√≠z do emulador           *
+* Licenciado sob a licen?a GNU GPL                                           *
+* Para mais informaÁıes leia o arquivo LICENSE na raÌz do emulador           *
 *****************************************************************************/
 
 #define BRATHENA_CORE
@@ -81,7 +81,7 @@
 #ifdef RENEWAL
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,  70, 100	},		// Neutro LV.1
-		{	100,  25, 100, 150,  90, 100,  75, 100, 100, 100	},		// √Ågua LV.1
+		{	100,  25, 100, 150,  90, 100,  75, 100, 100, 100	},		// ¡gua LV.1
 		{	100, 100,  25,  90, 150, 100,  75, 100, 100, 100	},		// Terra LV.1
 		{	100,  90, 150,  25, 100, 100,  75, 100, 100, 125	},		// Fogo LV.1
 		{	100, 175,  90, 100,  25, 100,  75, 100, 100, 100	},		// Vento LV.1
@@ -93,7 +93,7 @@
 	},
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,  50, 100	},		// Neutro LV.2
-		{	100,   0, 100, 175,  80, 100,  50,  75, 100, 100	},		// √Ågua LV.2
+		{	100,   0, 100, 175,  80, 100,  50,  75, 100, 100	},		// ¡gua LV.2
 		{	100, 100,   0,  80, 175, 100,  50,  75, 100, 100	},		// Terra LV.2
 		{	100,  80, 175,   0, 100, 100,  50,  75, 100, 150	},		// Fogo LV.2
 		{	100, 175,  80, 100,   0, 100,  50,  75, 100, 100	},		// Vento LV.2
@@ -105,7 +105,7 @@
 	},
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,   0, 100	},		// Neutro LV.3
-		{	100, -25, 100, 200,  70, 100,  25,  50, 100, 125	},		// √Ågua LV.3
+		{	100, -25, 100, 200,  70, 100,  25,  50, 100, 125	},		// ¡gua LV.3
 		{	100, 100, -25,  70, 200, 100,  25,  50, 100, 100	},		// Terra LV.3
 		{	100,  70, 200, -25, 100, 100,  25,  50, 100, 175	},		// Fogo LV.3
 		{	100, 200,  70, 100, -25, 100,  25,  50, 100, 100	},		// Vento LV.3
@@ -117,7 +117,7 @@
 	},
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,   0, 100	},		// Neutro LV.4
-		{	100, -50, 100, 200,  60,  75,   0,  25, 100, 150	},		// √Ågua LV.4
+		{	100, -50, 100, 200,  60,  75,   0,  25, 100, 150	},		// ¡gua LV.4
 		{	100, 100, -50,  60, 200,  75,   0,  25, 100,  50	},		// Terra LV.4
 		{	100,  60, 200, -50, 100,  75,   0,  25, 100, 200	},		// Fogo LV.4
 		{	100, 200,  60, 100, -50,  75,   0,  25, 100, 100	},		// Vento LV.4
@@ -130,7 +130,7 @@
 #else
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,  25, 100	},		// Neutro LV.1
-		{	100,  25, 100, 150,  50, 100,  75, 100, 100, 100	},		// √Ågua LV.1
+		{	100,  25, 100, 150,  50, 100,  75, 100, 100, 100	},		// ¡gua LV.1
 		{	100, 100, 100,  50, 150, 100,  75, 100, 100, 100	},		// Terra LV.1
 		{	100,  50, 150,  25, 100, 100,  75, 100, 100, 125	},		// Fogo LV.1
 		{	100, 175,  50, 100,  25, 100,  75, 100, 100, 100	},		// Vento LV.1
@@ -142,7 +142,7 @@
 	},
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,  25, 100	},		// Neutro LV.2
-		{	100,   0, 100, 175,  25, 100,  50,  75, 100, 100	},		// √Ågua LV.2
+		{	100,   0, 100, 175,  25, 100,  50,  75, 100, 100	},		// ¡gua LV.2
 		{	100, 100,  50,  25, 175, 100,  50,  75, 100, 100	},		// Terra LV.2
 		{	100,  25, 175,   0, 100, 100,  50,  75, 100, 150	},		// Fogo LV.2
 		{	100, 175,  25, 100,   0, 100,  50,  75, 100, 100	},		// Vento LV.2
@@ -154,7 +154,7 @@
 	},
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,   0, 100	},		// Neutro LV.3
-		{	100, -25, 100, 200,   0, 100,  25,  50, 100, 125	},		// √Ågua LV.3
+		{	100, -25, 100, 200,   0, 100,  25,  50, 100, 125	},		// ¡gua LV.3
 		{	100, 100,   0,   0, 200, 100,  25,  50, 100,  75	},		// Terra LV.3
 		{	100,   0, 200, -25, 100, 100,  25,  50, 100, 175	},		// Fogo LV.3
 		{	100, 200,   0, 100, -25, 100,  25,  50, 100, 100	},		// Vento LV.3
@@ -166,7 +166,7 @@
 	},
 	{//		Neut Watr Erth Fire Wind Pois Holy Shdw Gho  Und
 		{	100, 100, 100, 100, 100, 100, 100, 100,   0, 100	},		// Neutro LV.4
-		{	100, -50, 100, 200,   0,  75,   0,  25, 100, 150	},		// √Ågua LV.4
+		{	100, -50, 100, 200,   0,  75,   0,  25, 100, 150	},		// ¡gua LV.4
 		{	100, 100, -25,   0, 200,  75,   0,  25, 100,  50	},		// Terra LV.4
 		{	100,   0, 200, -50, 100,  75,   0,  25, 100, 200	},		// Fogo LV.4
 		{	100, 200,   0, 100, -50,  75,   0,  25, 100, 100	},		// Vento LV.4
@@ -1372,7 +1372,7 @@
 	sd->sc_display = NULL;
 	sd->sc_display_count = 0;
 
-	// [CarlosHenrq] Seguran√ßa para NPCs do tipo trader#NTS_CUSTOM
+	// [CarlosHenrq] SeguranÁa para NPCs do tipo trader#NTS_CUSTOM
 	sd->trader.ok = false;
 	sd->trader.price = sd->trader.points = 0;
 
@@ -1537,12 +1537,12 @@
 	if( pc_readaccountreg(sd,script->add_str("#BLOCKPASS")) > 0 )
 		sd->state.protection_acc = 1;
 
-	// Carrega o "last_ip" para o jogador com as informa√ß√µes para gera√ß√£o de log, visto que
-	// O Jogador pode ter colocado eu autotrade e isso vai dificultar se l√° pegar pelo ip da sess√£o. [CarlosHenrq, 2016-10-27]
+	// Carrega o "last_ip" para o jogador com as informaÁıes para geraÁ„o de log, visto que
+	// O Jogador pode ter colocado eu autotrade e isso vai dificultar se l· pegar pelo ip da sess„o. [CarlosHenrq, 2016-10-27]
 	if(sd->fd && sockt->session[sd->fd])
 	{
 		last_ip = sockt->ip2str(sockt->session[sd->fd]->client_addr, NULL);
-		safestrncpy(sd->status.last_ip, last_ip, 16); // O Tamanho disso est√° em: mmo.h [CarlosHenrq, 2016-10-27]
+		safestrncpy(sd->status.last_ip, last_ip, 16); // O Tamanho disso est· em: mmo.h [CarlosHenrq, 2016-10-27]
 	}
 	
 		
@@ -6874,7 +6874,7 @@
 	if(sd->state.showexp) {
 		char output[256];
 		sprintf(output,
-			"ExperiÔøΩncia Base:%u (%.2f%%) Classe:%u (%.2f%%)",base_exp,nextbp*(float)100,job_exp,nextjp*(float)100);
+			"Experi?ncia Base:%u (%.2f%%) Classe:%u (%.2f%%)",base_exp,nextbp*(float)100,job_exp,nextjp*(float)100);
 		clif_disp_onlyself(sd,output,strlen(output));
 	}
 
@@ -7194,7 +7194,7 @@
 		else if (sd->sktree.third)
 			clif->msgtable_num(sd, MSG_SKILL_POINTS_LEFT_JOB2, sd->sktree.third);
 		else if (pc->calc_skillpoint(sd) < 9) /* TODO: official response? */
-			clif->messagecolor_self(sd->fd, COLOR_RED, "VocÔøΩ precisa das habilidades bÔøΩsicas.");
+			clif->messagecolor_self(sd->fd, COLOR_RED, "Voc? precisa das habilidades b?sicas.");
 	}
 	return 0;
 }
@@ -8707,6 +8707,46 @@
 			break;
 		}
 	}
+	
+	// VerificaÁ„o, caso o sistema de limitaÁ„o de classe esteja ativo.
+	if ( battle_config.guild_job_limiter > 0 ) {
+		
+		struct guild *g = sd->guild;
+		// Verifica a exitÍncia do cl„ para determinado jogador.
+		if (g) {
+			
+			// Verifica a quantidade de jogadores da mesma classe que est„o na guild incluindo o prÛprio jogador.
+			int quantidade = guild->job_count(g, sd->status.class_);
+			
+			// Caso contando com ele seja maior do que o limite, ele ser· expulso.
+			if (quantidade > battle_config.guild_job_limiter) {
+				
+				/*
+				 * Verifica se o jogador È o lÌder do cl„, caso positivo ele ter· de escolher outro membro da
+				 * mesma classe para ser removido.
+				*/
+				if (sd->state.gmaster_flag) {
+					
+					// Percorre os membros do cl„.
+					int indice;
+					for (indice = 0; indice < g->max_member; ++indice) {
+						
+						// Porcura um membro da mesma classe para ser removido.
+						if ((g->member[indice].class_ == sd->status.class_) && (g->member[indice].char_id != sd->status.char_id)) {
+							// Remove membro do cl„
+							intif->guild_leave(g->guild_id,g->member[indice].account_id,g->member[indice].char_id,1,"Excesso de contigente");
+							// Finaliza o laÁo de repetiÁ„o.
+							indice = g->max_member;					
+						}
+					}				
+				} else {
+					// Remove o membro do cl„.
+					intif->guild_leave(g->guild_id,sd->status.account_id,sd->status.char_id,1,"Excesso de contigente");
+				}					
+			}			
+		}
+	}
+	// Fim da verificaÁ„o.
 
 	return 0;
 }
@@ -11068,24 +11108,24 @@
 // Retorna o level correspondente ao identificador.
 // enum _max_level_ (mmo.h)
 /**
- * Fun√ß√£o para retornar o n√≠vel m√°ximo de acordo com a classe do personagem.
+ * FunÁ„o para retornar o nÌvel m·ximo de acordo com a classe do personagem.
  *
  * @param job Classe do personagem.
- * @param type Tipo de solicita√ß√£o. (0: N√≠vel base, 1: N√≠vel classe)
+ * @param type Tipo de solicitaÁ„o. (0: NÌvel base, 1: NÌvel classe)
  *
- * @return O N√≠vel m√°ximo para a classe solicitada.
+ * @return O NÌvel m·ximo para a classe solicitada.
  *
- * -> Primeira vers√£o estava sem as constantes de classe, n√£o se sabia quais deviam ser testadas.
+ * -> Primeira vers„o estava sem as constantes de classe, n„o se sabia quais deviam ser testadas.
  * -> Alterado o nome de 'GetLevel' para -> 'pc_get_maxlevel'
  * -> Adicionado todas as constantes das classes para trabalhar em cima.
  *
  * ---- Feita inicialmente pelo Shiraz
  * ---- Refatorado por CarlosHenrq em 2016-10-27
- *      ---> Ainda n√£o est√° bom, pois o lv m√°ximo depende de src e n√£o de arquivos de configura√ß√£o do emulador e sim da src.
+ *      ---> Ainda n„o est· bom, pois o lv m·ximo depende de src e n„o de arquivos de configuraÁ„o do emulador e sim da src.
  */
 static int pc_get_maxlevel(int job, int type)
 {
-	// 0: N√≠vel base
+	// 0: NÌvel base
 	if(type == 0)
 	{
 		if((job >= JOB_NOVICE && job <= JOB_NINJA) || (job >= JOB_BABY && job <= JOB_SUPER_BABY))
@@ -11097,7 +11137,7 @@
 		else if((job >= JOB_SUPER_NOVICE_E && job <= JOB_SUPER_BABY_E) || (job == JOB_KAGEROU || job == JOB_REBELLION))
 			return battle_config.max_baselv_sne_ko;
 	}
-	// 1: N√≠vel classe
+	// 1: NÌvel classe
 	else if(type == 1)
 	{
 		if(job == JOB_NOVICE || job == JOB_BABY)
@@ -11803,7 +11843,7 @@
  */
 int pc_vending_chat_count_near(struct map_session_data* sd)
 {
-	// Retorna o somat√≥rio somente se a configura√ß√£o estiver ativa.
+	// Retorna o somatÛrio somente se a configuraÁ„o estiver ativa.
 	if(battle_config.vending_chat_block_range_check_cells > 0 && battle_config.vending_chat_block_range_count_players > 0)
 		return (vending->count_range(&sd->bl, battle_config.vending_chat_block_range_check_cells)
 						+ chat->count_range(&sd->bl, battle_config.vending_chat_block_range_check_cells));
@@ -11812,15 +11852,15 @@
 }
 
 /**
- * Testa se existem muitas vendas e lojas pr√≥ximas ao jogador.
+ * Testa se existem muitas vendas e lojas prÛximas ao jogador.
  *
  * @param struct map_session_data* sd
  *
- * @return Se houver muitos players com chat/loja ent√£o retorna verdadeiro.
+ * @return Se houver muitos players com chat/loja ent„o retorna verdadeiro.
  */
 bool pc_too_many_vending_chat_near(struct map_session_data* sd)
 {
-	// Se a configura√ß√£o tiver ativa, realiza os testes de contagem de venda.
+	// Se a configuraÁ„o tiver ativa, realiza os testes de contagem de venda.
 	if(battle_config.vending_chat_block_range_check_cells > 0 && battle_config.vending_chat_block_range_count_players > 0)
 		return (pc->vending_chat_count_near(sd) >= battle_config.vending_chat_block_range_count_players);
 
@@ -12198,7 +12238,7 @@
 	
 	pc->have_magnifier = pc_have_magnifier;
 
-	// Configura√ß√£o para bloquear jogadores de abrir chat/loja pr√≥ximos uns aos outros. [CarlosHenrq]
+	// ConfiguraÁ„o para bloquear jogadores de abrir chat/loja prÛximos uns aos outros. [CarlosHenrq]
 	pc->vending_chat_count_near = pc_vending_chat_count_near;
 	pc->too_many_vending_chat_near = pc_too_many_vending_chat_near;
 }
